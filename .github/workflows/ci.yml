name: basic-ci

on: push

env:
  LOG_LEVEL: info
  SWIFT_DETERMINISTIC_HASHING: true
  DATABASE_USERNAME: vapor_username
  DATABASE_PASSWORD: vapor_password
  TEST_DATABASE_NAME: vapor_database
  SEED_DB: true
  PG_DUMP_PATH: not-real
  SENDGRID_API_KEY: not-real
  SLACK_API_TOKEN: not-real
  PSQL_PATH: /usr/local/bin/psql
  SLACK_API_TOKEN_WORKSPACE_MAIN: not-real
  SLACK_API_TOKEN_WORKSPACE_BOT: not-real
  DATABASE_NAME: vapor_database
  CLOUD_STORAGE_BUCKET_URL: /not-real
  LULU_API_ENDPOINT: /not-real
  LULU_CLIENT_KEY: not-real
  LULU_CLIENT_SECRET: not-real
  STRIPE_PUBLISHABLE_KEY: not-real
  STRIPE_SECRET_KEY: not-real
  JARED_CONTACT_FORM_EMAIL: you@example.com
  JASON_CONTACT_FORM_EMAIL: you@example.com
  LOCATION_API_KEY: not-real
  SELF_URL: /not-real
  WEBSITE_URL_EN: /not-real
  WEBSITE_URL_ES: /not-real

jobs:
  linux:
    runs-on: ubuntu-latest
    env:
      DATABASE_HOST: postgres
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: vapor_username
          POSTGRES_PASSWORD: vapor_password
          POSTGRES_DB: vapor_database
    container: swift:5.5-focal
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: swift build
      - name: Run tests
        run: swift test

  # need macos-12 concurrency, uncomment when available
  # says it's available now (2/2022) but, no runner ever picks up the job...
  # macos:
  #   runs-on: macos-12
  #   steps:
  #     - name: Setup xcode
  #       uses: maxim-lobanov/setup-xcode@v1
  #       with:
  #         xcode-version: 13.2
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Start postgres
  #       # if this isn't reliable, switch back to
  #       # https://gist.github.com/jaredh159/634285e52456fefc9f04fb2b4bd3af28
  #       run: brew services start postgres; sleep 5 && pg_isready
  #     - name: Create db user and db
  #       run: |
  #         psql --command="CREATE USER vapor_username PASSWORD 'vapor_password'" --command="\du" postgres
  #         createdb --owner=vapor_username vapor_database
  #     - name: Build
  #       run: swift build
  #     - name: Run tests
  #       run: swift test
